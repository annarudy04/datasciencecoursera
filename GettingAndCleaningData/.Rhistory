merge(customers, orders, by.x="id", by.y="customer_id", all.x=TRUE)
merge(customers, orders, by.x="id", by.y="customer_id", all.y=TRUE)
merge(customers, orders, by.x="id", by.y="customer_id", all=TRUE)
merge(customers, orders)
merge(customers, orders, by="id")
select(customers, id='customer_id')
rename(customers, customer_id=id)
select(customers, customer_id=id)
merge(rename(customers, customer_id=id), orders, by="id")
merge(rename(customers, customer_id=id), orders, by="customer_id")
merge(rename(customers, customer_id=id), orders)
customers <- rename(customers, customer_id = id)
customers
merge(customers, orders)
merge(customers, orders, by='customer_id')
install.packages('plyr')
library(plyr)
customers
orders
join(customer, orders)
join(customers, orders)
join(customers, orders, type="full")
join(customers, orders, type="right")
join(customers, orders, type="inner")
dfs <- list(
a = data.frame(x = 1:10, a = runif(10)),
b = data.frame(x = 1:10, b = runif(10)),
c = data.frame(x = 1:10, c = runif(10))
)
join_all(dfs)
join_all(dfs, "x")
swirl()
install.packages("swirl")
library(swirl)
swirl()
swirl()
1
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dyplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(5:20))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1")
filter(cran, r_version == "3.1.1", country == 'US')
?Comparison
filter(cran, r_version == "3.0.2", country == 'IN')
filter(cran, r_version <= "3.0.2", country == 'IN')
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(R.version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, mb = size/ 2^20)
mutate(cran3, size_mb = size/ 2^20)
mutate(cran3, size_gb = size/ 2^10)
mutate(cran3, size_mb = size/ 2^20, size_gb = size/ 2^10)
mutate(cran3, size_mb = size/ 2^20, size_gb = size_mb/ 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, size)
summarize(by_package, mean(size))
submit()
submit()
submit()
n()
n(by_package)
submit()
submit()
submit()
by_package
summarize(by_package, count=tally())
summarize(by_package, count=tally(package))
summarize(by_package, mean=mean(size))
summarize(by_package, mean=mean(size), countries=n_distinct(ip_id))
summarize(by_package, mean=mean(size), countries=n_distinct(ip_id), count=n())
rlang::last_error()
rm(plyr)
detach("package:plyr", unload=TRUE)
summarize(by_package, mean=mean(size), countries=n_distinct(ip_id), count=n())
summarize(by_package, mean=mean(size), countries=n_distinct(ip_id), count=n())
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = .99)
top_unique <- filter(packsum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
sumbit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
pivot_longer(students, sex, count, -grade)
pivot_longer(students, -grad, names_to=sex, values_to=count)
pivot_longer(students, -grade, names_to=sex, values_to=count)
pivot_longer(students, -grade, names_to="sex", values_to="count")
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
pivot_longer(students2, names_to="sex_class", values_to="count", -grade)
?separate
separate(res, col=sex_class, into = c("sex", "class"))
res <- ivot_longer(students2, names_to="sex_class", values_to="count", -grade)
res <- pivot_longer(students2, names_to="sex_class", values_to="count", -grade)
separate(res, col=sex_class, into = c("sex", "class"))
submit()
submit()
submit()
student2
student3
students3
submit()
submit()
submit()
submit()
gather(students3, key=class, value=class1:class5, -name)
gather(students3, key=class, value=class1:class5)
gather(students3, class, class1:class5, -name)
students3
gather(students3, class, class1:class5, -name, -test)
reset()
swirl()
submit()
students3
gather(students3, class, grade, -name)
gather(students3, class, grade, -name, -test)
pivot_longer(students3, names_to = class, values_to = grade, class1:class5)
pivot_longer(students3, names_to = "class", values_to = "grade", class1:class5)
pivot_longer(students3, names_to = "class", values_to = "grade", -name, -test)
pivot_longer(students3, names_to = "class", values_to = "grade", -(name:test)
)
pivot_longer(students3, names_to = "class", values_to = "grade", -(name:test), na.rm=TRUE)
pivot_longer(students3, names_to = "class", values_to = "grade",na.rm=TRUE, -(name:test), )
pivot_longer(students3, names_to = "class", values_to = "grade",na.rm=TRUE, -(name:test) )
pivot_longer(students3, names_to = "class", values_to = "grade", -(name:test), values_drop_na = =TRUE)
pivot_longer(students3, names_to = "class", values_to = "grade", -(name:test), values_drop_na =TRUE)
submit()
pivot_longer(students3, names_to = "class", values_to = "grade", class1:class5, values_drop_na =TRUE)
?spread
submit()
submit()
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
spread(stocksm, stock, price)
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))
df
spread(df, x, y)
submit()
pivot_wider(students3, test, grade)
students3
s <- pivot_longer(students3, class, grade, class1:class5)
s <- pivot_longer(students3, "class", "grade", class1:class5, values_drop_na = TRUE)
s <- pivot_longer(students3, names_to = "class", values_to = "grade", class1:class5, values_drop_na = TRUE)
s
pivot_wider(s, test, grade)
fish_encounters
pivot_wider(fish_encounters, names_from = station, values_from = seen)
pivot_wider(s, names_from= test, values_from = grade)
library(readr)
parse_number("class5")
submit()
students3
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>% mutate(class=parse_number(class))
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(status = "failed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
passed
failed
bind(passed, failed)
bind_rows(passed, failed)
sat
submit()
submit()
source("week3quiz.R")
getwd()
setwd("datasciencecoursera/GettingAndCleaningData")
source("week3quiz.R")
source("week3quiz.R")
source("week3quiz.R")
df
df[df$ACR > 10]
df[df$ACR > 10, ]
df[df$ACR > 10 & df$AGS ==6, ]
which(df[df$ACR > 10 & df$AGS ==6, ])
which(df$ACR > 10 & df$AGS == 6)
df$ACR > 10 & df$AGS == 6
which(df[df$ACR > 10 & df$AGS ==6, ])
which(df$ACR == 3 & df$AGS == 6)
df$ACR == 3 & df$AGS == 6
df$ACR == 3 & df$AGS == 6
source("week3quiz.R")
source("week3quiz.R")
q1()
source("week3quiz.R")
q2()
q2()
source("week3quiz.R")
q2()
source("week3quiz.R")
q2()
install.packages("jpeg")
source("week3quiz.R")
q2()
source("week3quiz.R")
q2()
source("week3quiz.R")
q3()
gdp
q3()
q3()
source("week3quiz.R")
q3()
gdp
edu
gdp <- read.csv("gdp.csv")
tail(gdp)
names(gdp)
gdp.X
gdp$X
edu <- read.csv("edu.csv")
names(edu)
edu$CountryCode
merge(gdp, edu, by.x = "X", by.y = "CountryCode")
nrow(merge(gdp, edu, by.x = "X", by.y = "CountryCode"))
di(merge(gdp, edu, by.x = "X", by.y = "CountryCode"))
dmi(merge(gdp, edu, by.x = "X", by.y = "CountryCode"))
dim(merge(gdp, edu, by.x = "X", by.y = "CountryCode"))
m <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
gdp$X
gdp <- gdp[!is.na(gdp$X)]
hgghhghghgghhghguttittypoopoop33p33
gdp <- gdp[!is.na(gdp$X), ]
edu <- edu[!is.na(edu$CountryCode)]
edu <- edu[!is.na(edu$CountryCode), ]
m <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
dim(m)
names(m)
arrange(m, desc(CountryCode))
arrange(m, desc("CountryCode"))
m
m <- select(X, CountryCode, Gross.domestic.product.2012)
m <- select("X", CountryCode, Gross.domestic.product.2012)
names(m)
library(dplyr)
m <- select("X", CountryCode, Gross.domestic.product.2012)
m <- select(X, CountryCode, Gross.domestic.product.2012)
names(edu)
names(gdp)
head(gdp)
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4)
gdp <- rename(gdp, CountryCode = X, ranking = X.1)
gdp[is.na(CountryCode)]
gdp[is.na(gdp$CountryCode)]
gdp[is.na(gdp$CountryCode), ]
head(gdp)
gdp[1, ]
gdp[2, ]
is.na(gdp$CountryCode)
which(is.na(gdp$CountryCode))
merge(gdp, edu, by=CountryCode)
names(gdp)
merge(gdp, edu, by="CountryCode")
m <- merge(gdp, edu, by="CountryCode")
dim(m)
m <- merge(gdp, edu, by="CountryCode", all=FALSE)
dim(m)
tail(gdp)
tail(edu)
gdp$ranking <- as.numeric(gdp$ranking)
which(is.na(gdp$CountryCode))
which(is.na(gdp$ranking))
tail(gdp)
head(gdp)
gdp <- read.csv("gdp.csv", skip = 4)
gdp <- rename(gdp, CountryCode = X, ranking = X.1)
head(gdp)
class(gdp$ranking)
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
gdp <- rename(gdp, CountryCode = X, ranking = X.1)
head(gdp)
tail(gdp)
gdp$ranking <- as.numeric(gdp$ranking)
tail(gdp)
dim(gdp)
gdp <- gdp[!is.na(gdp$ranking), ]
dim(gdp)
m <- merge(gdp, edu, by="CountryCode", all=FALSE)
dim(m)
m <- merge(gdp, edu, by="CountryCode")
dim(m)
m <- arrange(m, desc(ranking))
m
head(m)
head(select(m, CountryCode, ranking))
head(select(m, CountryCode, ranking), 13)
head(select(m, CountryCode, ranking, Long.Name), 13)
select(m, CountryCode, ranking)[13, ]
select(m, CountryCode, ranking, Long.Name)[13, ]
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
select(gdp, !is.na(ranking))
select(gdp, !is.na(gdp!ranking))
select(gdp, !is.na(gdp$ranking))
filter(gdp, !is.na(gdp$ranking))
filter(gdp, !is.na(ranking))
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE) %>%
rename(CountryCode = X, ranking = X.1) %>%
mutate(ranking = as.numeric(gdp$ranking))
filter(!is.na(ranking))
q3()
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE) %>%
rename(CountryCode = X, ranking = X.1) %>%
mutate(ranking = as.numeric(gdp$ranking)) %>%
filter(!is.na(ranking))
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
gdp <- rename(CountryCode = X, ranking = X.1)
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
names(gdp)
gdp <- rename(CountryCode = "X", ranking = "X.1")
gdp <- rename(gdp, CountryCode = "X", ranking = "X.1")
mutate(ranking = as.numeric(gdp$ranking)) %>%
)
gdp <-  mutate(gdp, ranking = as.numeric(gdp$ranking)) %>%
)
gdp <-  mutate(gdp, ranking = as.numeric(gdp$ranking))
filter(gdp, !is.na(ranking))
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
gdp %>% rename(CountryCode = "X", ranking = "X.1") %>%
mutate(ranking = as.numeric(gdp$ranking)) %>%
filter(!is.na(ranking))
gdp %>% rename(CountryCode = "X", ranking = "X.1")
gdp %>% rename(CountryCode = "X", ranking = "X.1") %>%
mutate(ranking = as.numeric(gdp$ranking))
gdp%>%
mutate(ranking = as.numeric(gdp$ranking))
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
gdp%>%
mutate(ranking = as.numeric(gdp$ranking))
mutate(gdp, ranking = as.numeric(gdp$ranking))
mutate(gdp, ranking = as.numeric(ranking))
gdp %>% rename(CountryCode = "X", ranking = "X.1") %>%
mutate(ranking = as.numeric(ranking))
source("week3quiz.R")
q3()
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
dim(gdp)
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)
gdp %>% rename(CountryCode = "X", ranking = "X.1") %>%
mutate(ranking = as.numeric(ranking)) %>%
filter(!is.na(ranking))
dim(gdp)
gdp %>% rename(CountryCode = "X", ranking = "X.1") %>%
mutate(ranking = as.numeric(ranking))
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
source("week3quiz.R")
q3()
mtcarfs
mtcars
slice(mtcars, n())
slice(mtcars, n(), .preserve = TRUE)
slice(mtcars, 16)
mtcars[16, ]
dim(mtcars)
mtcars[32, ]
summarize(mtcars, count = n())
grouped_cars <- group_by(mtcars, cyl)
summarize(grouped_cars, count = n())
names(m)
m[1,]
m$Income.Group
m_grouped <- group_by(m, Income.Group)
summarize(m_grouped, mean_rank=mean(ranking))
quantile(m, ranking)
quantile(m$ranking)
c <- cut(m$ranking, breaks = 5)
c
table(c)
table(c, m$Income.Group)
table(c, m$Income.Group)[, "Lower middle income"]
table(c, m$Income.Group)["(0.811, 38.8] ", "Lower middle income"]
table(c, m$Income.Group)["(0.811, 38.8]", "Lower middle income"]
table(c, m$Income.Group)[1, "Lower middle income"]
summarize(m_grouped, mean_rank=mean(ranking))
source("week3quiz.R")
source("week3quiz.R")
q4()
source("week3quiz.R")
q4()
source("week3quiz.R")
q5()
