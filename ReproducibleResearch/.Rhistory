head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & count.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
split(cnt0, cnt0$county.site)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub), lwd = 2, na.rm = TRUE)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(h =median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean = mn0)
d1 <- data.frame(state=names(mn1), mean = mn1)
mrg <- merge(d0, d1, set = "state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
points(rep(2, 52), mrg[, 3])
with(mrg, points(rep(2, 52), mrg[, 3]))
rep(1,52)
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
getwd()
setwd('datasciencecoursera/ExploratoryDataAnalysis/Week4Project')
NEI <- readRDS("exdata_data_NEI_data/summarySCC_PM25.rds")
source("airpollution.R")
get_data()
source("airpollution.R")
get_data()
source("airpollution.R")
get_data()
head(NEI)
class(NEI)
source("airpollution.R")
source("airpollution.R")
SCC <- readRDS("exdata_data_NEI_data/Source_Classification_Code.rds")
head(SCC)
names(SCC)
head(NEI)
table(NEI$year)
with(NEI, plot(year, emissions))
with(NEI, plot(year, Emissions))
library(dplyr)
summarize(group_by(NEI, year), total = sum(Emissions))
exists(NEI)
exists("NEI")
exists("x")
exists("a")
a <- 1
exists("a")
yearly_totals <- summarize(group_by(NEI, year), total = sum(Emissions))
with(yearly_totals, plot(year, total))
ylab("Total Emissions in Tons")
with(yearly_totals, vRplot(year, total))
with(yearly_totals, barplot(year, total))
with(yearly_totals, vRplot(year, total))
with(yearly_totals, plot(year, total))
with(yearly_totals, plot(year, total, ylab = "Total Emissions (tons)", xlab = "year", type = "l")
)
with(yearly_totals, plot(year, total, ylab = "Total Emissions (Tons)", xlab = "Year", type = "b")
)
with(yearly_totals, plot(year, total, ylab = "Total Emissions (Tons)", xlab = "Year", type = "b"))
source("airpollution.R")
q1()
bmd <- filter(NEI, fips = "24510")
bmd <- filter(NEI, fips == "24510")
head(bmd)
bmd_yearly_totals <- NEI %>%
filter(NEI, fips == "24510") %>%
summarize(group_by(year), total = sum(Emissions))
bmd_yearly_totals <- NEI %>%
filter(NEI, fips == "24510") %>%
group_by(year)
bmd <-  filter(NEI, fips == "24510")
NEI %>%
+     filter(NEI, fips == "24510") %>%
+     group_by(year)
NEI %>%
+     filter(fips == "24510") %>%
+     group_by(year)
NEI %>% filter(fips == "24510")
NEI %>% filter(fips == "24510") %>% group_by(year)
x <- NEI %>% filter(fips == "24510") %>% group_by(year)
x
bmd_yearly_totals <- NEI %>%
filter(fips == "24510") %>%
group_by(year)
bmd_yearly_totals <- NEI %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(total = sum(Emissions))
bmd_yearly_totals
yearly_totals <- NEI %>%
group_by(year) %>%
summarize(total = sum(Emissions))
yearly_totals
with(
bmd_yearly_totals,
plot(
year,
total,
main = "Baltimore Yearly Emissions",
ylab = "Total Emissions (Tons)",
xlab = "Year",
type = "b"
)
)
source("airpollution.R")
q1()
q2()
names(NEI)
bmd_yearly_totals <- NEI %>%
filter(fips == "24510") %>%
group_by(year, type) %>%
summarize(total = sum(Emissions))
bmd_yearly_totals
bmd_yearly_totals <- NEI %>%
filter(fips == "24510") %>%
group_by(year, type) %>%
summarize(total = sum(Emissions))
qplot(year, total, bmd_yearly_totals, color = type)
qplot(year, total, data =  bmd_yearly_totals, color = type)
qplot(year, total, data =  bmd_yearly_totals, geom = "line", color = type)
qplot(year, total, data =  bmd_yearly_totals, main = "Baltimore Yearly Emissions by Type", xlab = "Year", ylab = "Total Emissions (Tons)", geom = "line", color = type)
source("airpollution.R")
q3()
source("airpollution.R")
q3()
source("airpollution.R")
q3()
ggsave("plot3.png", width = 480, height = 480, units = "px")
ggsave("plot3.png", width = 480, height = 480)
ggsave("plot3.png", width = 4, height = 4)
ggsave("plot3.png", width = 6, height = 4)
source("airpollution.R")
q3()
head(SCC)
unique(SCC$SCC.Level.Four)
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Two)
unique(SCC$SCC.Level.Three)
grep("coal", unique(SCC$SCC.Level.Three), value = TRUE)
grep("coal", unique(SCC$SCC.Level.Four), value = TRUE)
grep("Coal", unique(SCC$SCC.Level.Four), value = TRUE)
names(SCC)
grep("Coal", unique(SCC$SCC.EI.Sector), value = TRUE)
grep("Coal", unique(SCC$EI.Sector), value = TRUE)
count([1, 2, 3])
count(grep("Coal", unique(SCC$EI.Sector), value = TRUE))
length(grep("Coal", unique(SCC$EI.Sector), value = TRUE))
length(grep("Coal", SCC$EI.Sector, value = TRUE))
grep("Coal", unique(SCC$SCC.Level.Four), value = TRUE)
grep("Coal", SCC$SCC.Level.Four, value = TRUE)
grep("Coal", unique(SCC$EI.Sector), value = TRUE)
names(SCC)
head(SCC)
select(SCC, contains("Coal"))
filter(SCC, grepl("Coal", EI.Sector))
dim(SCC)
dim(filter(SCC, grepl("Coal", EI.Sector)))
select(filter(SCC, grepl("Coal", EI.Sector)), SCC, EI.Sector)
coal_scc < SCC %>%
select(SCC, EI.Sector, ) %>%
filter(grepl("Coal", EI.Sector))
coal_scc <- SCC %>%
select(SCC, EI.Sector, ) %>%
filter(grepl("Coal", EI.Sector))
coal_scc
is.na(NEI$SCC)
n <- is.na(NEI$SCC)
n[n == TRUE]
n[n == FALSE]
length(n[n == FALSE])
dim(NEI)
coal_scc < SCC %>%
select(SCC, EI.Sector, ) %>%
filter(grepl("Motor", EI.Sector))
coal_scc < SCC %>%
select( EI.Sector, ) %>%
filter(grepl("Motor", EI.Sector))
coal_scc < SCC %>%
select( EI.Sector ) %>%
filter(grepl("Motor", EI.Sector))
grepl("Motor", SCC$EI.Sector)
grepl("Motor", SCC$EI.Sector, values = TRUE)
grepl("Motor", SCC$EI.Sector, value = TRUE)
grep("Motor", SCC$EI.Sector, value = TRUE)
grep("Motor", SCC$SCC.Level.Four, value = TRUE)
names(SCC)
grep("Vehicle", SCC$SCC.Level.Four, value = TRUE)
grep("Vehicle", SCC$EI.Sector, value = TRUE)
unique(grep("Vehicle", SCC$EI.Sector, value = TRUE))
j <- left_join(NEI, select(SCC, SCC, EI.Sector))
head(select(SCC, SCC, EI.Sector))
j <- left_join(NEI, select(SCC, SCC, EI.Sector), by = SCC)
j <- left_join(NEI, select(SCC, SCC, EI.Sector), by = c("SCC"))
head(j)
sector_emissions <- left_join(NEI, select(SCC, SCC, EI.Sector), by = c("SCC"))
coal_yearly_emissions <- sector_emissions %>%
filter(grepl("Coal", EI.Sector)) %>%
group_by(year) %>%
summarize(total = sum(Emissions))
coal_yearly_emissions
yearly_totals
qplot(year, total, coal_yearly_emissions)
qplot(year, total, data=coal_yearly_emissions)
qplot(year, total, data=coal_yearly_emissions, geom = "line")
qplot(year, total, data=coal_yearly_emissions, geom = "bar")
qplot(year, total, data=coal_yearly_emissions, geom = "line")
qplot(year, total, data=coal_yearly_emissions, geom = "line", main = "Coal Related Yearly Emissions")
qplot(year, total, data=coal_yearly_emissions, geom = "line", main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
coal_yearly_emissions <- sector_emissions %>%
filter(grepl("Coal", EI.Sector))
qplot(year, total, data=coal_yearly_emissions, geom = "line", main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
qplot(year, Emissions, data=coal_yearly_emissions, geom = "line", main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
qplot(year, Emissions, data=coal_yearly_emissions, main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
plot(year, Emissions, data=coal_yearly_emissions, main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
with(coal_yearly_emissions, plot(year, Emissions))
source("airpollution.R")
q4()
qplot(year, total, data=coal_yearly_emissions, geom = "line", main = "Coal Related Yearly Emissions", xlab = "Year", ylab = "Total Emissions (tons)")
source("airpollution.R")
q4()
bmd_yearly_type_totals <- sector_emissions %>%
filter(fips == "24510" & grepl("Vehicle", EI.Sector)) %>%
group_by(year) %>%
summarize(total = sum(Emissions))
bmd_yearly_totals
bmd_yearly_type_totals
source("airpollution.R")
source("airpollution.R")
q5()
q4()
fips = c("24510", "06037")
"06037" %in% fips
bmd__la_yearly_vehicle_totals <- sector_emissions %>%
filter(fips %in% c("24510") & grepl("Vehicle", EI.Sector)) %>%
group_by(year) %>%
summarize(total = sum(Emissions))
head(bmd__la_yearly_vehicle_totals)
bmd_la_yearly_vehicle_totals <- sector_emissions %>%
filter(fips %in% c("24510") & grepl("Vehicle", EI.Sector)) %>%
group_by(year, fips) %>%
summarize(total = sum(Emissions))
qplot(
year,
total,
data=bmd_la_yearly_vehicle_totals,
color = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
bmd_la_yearly_vehicle_totals <- sector_emissions %>%
filter(fips %in% c("24510", "06037") & grepl("Vehicle", EI.Sector)) %>%
group_by(year, fips) %>%
summarize(total = sum(Emissions))
qplot(
year,
total,
data=bmd_la_yearly_vehicle_totals,
color = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
bmd_la_yearly_vehicle_totals
qplot(
year,
total,
data=bmd_la_yearly_vehicle_totals,
facets = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
qplot(
year,
total,
data=bmd_la_yearly_vehicle_totals,
facets = . ~ fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
bmd_la_yearly_vehicle_totals
qplot(
year,
total,
data=bmd_la_yearly_vehicle_totals,
color = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
scale_fill_discrete(name="Experimental\nCondition",
breaks=c("ctrl", "trt1", "trt2"),
labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(
aes(year,
total),
data=bmd_la_yearly_vehicle_totals,
color = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
g<-ggplot(
aes(year,
total),
data=bmd_la_yearly_vehicle_totals,
color = fips,
geom = "line",
main = "Baltimore Yearly Emissions from Vehicles",
xlab = "Year",
ylab = "Total Emissions (tons)"
)
g
g + geom_line()
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total))
g + geom_line()
g + geom_point()
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total, color = fips))
g + geom_line()
g + geom_line() + scale_fill_discrete(name="County",
labels=c("LA", "Baltimore"))
g + geom_line() + scale_fill_discrete(name="County",
labels=c("LA", "Baltimore"))
g + geom_line() + scale_fill_discrete(name="County",
labels=c("LA", "Baltimore"), breaks = c("06037", "24510"))
g + geom_line() + scale_linetype(name="County",
labels=c("LA", "Baltimore"), breaks = c("06037", "24510"))
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total))
g + geom_line() + scale_linetype(name="County",
labels=c("LA", "Baltimore"), breaks = c("06037", "24510"))
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total, color = fips))
g + geom_line() + scale_linetype(name="County",
labels=c("LA", "Baltimore"), breaks = c("06037", "24510"))
g + geom_line() + scale_linetype_manual("Variabler",values=c("Antal Kassor"=2,"Medelvärde"=1))
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total, group = fips))
g + geom_line(aes(col = fips)) + scale_linetype_discrete(name="County") + scale_color_discrete(name = "County")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("LA", "B"))
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("LA", "B")) + xlab("hey")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles County", "Baltimore County"))
g <- ggplot(bmd_la_yearly_vehicle_totals, aes(year, total, group = fips), xlab = "hey")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles County", "Baltimore County"))
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles County", "Baltimore County")) + xlab("Year") + ylab("Total Emissions (tons)") + main("hey")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles County", "Baltimore County")) + xlab("Year") + ylab("Total Emissions (tons)") + title("hey")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles County", "Baltimore County")) + xlab("Year") + ylab("Total Emissions (tons)")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles", "Baltimore")) + xlab("Year") + ylab("Total Emissions (tons)")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles", "Baltimore")) + xlab("Year") + ylab("Total Emissions (tons)") + ggtitle("hey")
g + geom_line(aes(col = fips)) + scale_color_discrete(name = "County", labels = c("Los Angeles", "Baltimore")) + xlab("Year") + ylab("Total Emissions (tons)") + ggtitle("Yearly Emissions from Vehicles")
source("airpollution.R")
source("airpollution.R")
q6()
source("plot1.R")
1:6
source("create_plots.R")
source("create_plots.R")
source("create_plots.R")
getwd()
setwd("/Users/annarudy")
setwd("/Users/annarudy/R_practice")
getwd()
setwd("food_atlas")
source("practice.R")
source("practice.R")
source("practice.R")
source("practice.R")
variables <- read.csv("food_atlas_data/VARIABLES")
variables <- read.csv("food_atlas_data/VARIABLES.csv")
head(variables)
variables[Variable.Code == "LACCESS_NHPI15"]
variables[variables$Variable.Code == "LACCESS_NHPI15"]
subset(variables, Variable.Code == "LACCESS_NHPI15")
subset(variables, Variable.Code == "LACCESS_NHPI15", Variable.Name)
subset(access, state == "AL", fips)
subset(access, State == "AL", fips)
subset(access, State == "AL", FIPS)
head(access)
access["state"]
access["State"]
head(access["state"])
head(access["State"])
class(head(access["state"]))
class(head(access["State"]))
l <- c("one", 2, 9, "ten")
class(l)
l
l <- lis("one", 2, 9, "ten")
l <- list("one", 2, 9, "ten")
class(l)
list[1]
l[1]
l <- list("one", 2, 9, "ten", list(1, 2))
l
l <- list("one", 2, 9, "ten", c(1, 2))
l
l[1]
l[[1]]
l[1][1]
l[1][2]
l[5][2]
l[[5]][2]
class(access["State"])
class(access[["State"]])
class(access$State)
l
l[[2]] + l[[3]]
l[2] + l[3]
l[2]
l[[2]] + l[[5]]
l[[2]] + l[[5]][2]
color_factors <- gl(3, 4, c("blue", "green", "red"))
color_factors <- gl(3, 4, labels = c("blue", "green", "red"))
color_factors
color_factors <- gl(3, 4, labels = c("blue", "green", "red"), ordered = FALSE)
color_factors
color_factors <- gl(3, 4, labels = c("blue", "green", "red"), ordered = TRUE)
color_factors
color_factors_2 <- factor(c("blue", "green", "red", "red"))
color_factors_2
sapply(access, class)
is.ordered(color_factors)
levels(color_factors)
color_factors
levels(color_factors) <- c("red", "blue", "green")
color_factors
head(access)
sapply(access, is.factor)
access_mini <- access[, 1:3]
access_mini
split(access_mini, State)
head(access_min)
head(access_mini)
split(access_mini, access_mini$State)
sapply(split(access_mini$State), count)
sapply(split(access_mini, access_mini$State), count)
access_mini[access_mini$State == "DE"]
access_mini[, access_mini$State == "DE"]
access_mini$State[, access_mini$State == "DE"]
access_mini$State[access_mini$State == "DE"]
access_mini$State[access_mini$State == "WY"]
length(access_mini$State[access_mini$State == "WY"])
sapply(split(access_mini, access_mini$State), length)
head(access_mini)
head(access)
split(mini_access$FIPS, mini_access$State)
mini_access
split(access_mini$FIPS, access_mini$State)
sapply(split(access_mini$FIPS, access_mini$State), length)
sapply(split(access_mini$FIPS, access_mini$State), count)
source("practice.R")
source("practice.R")
num_counties <- num_counties()
num_counties
count(num_counties)
length(num_counties)
count(access$State)
sapply(split(access_mini$FIPS, access_mini$State), count)
sapply(split(access_mini, access_mini$State), count)
split(access_mini, access_mini$State)
split(access_mini, access_mini$State)$WY
count(split(access_mini, access_mini$State)$WY)
summary(access)
str(access)
rnorm(10, mean = 50, sd = 20)
rnorm(10, mean = 50, sd = 50)
table(access_mini, State)
table(access_mini, access_mini$State)
table(access_mini$State)
type(table(access_mini$State))
class(table(access_mini$State))
class(sapply(split(access_mini, access_mini$State), count))
list.files("food_atlas_data")
data.table()
getwd()
setwd("/Users/annarudy/ReproducilbeResearch")
setwd("/Users/annarudy/ReproducibleResearch")
setwd("/Users/annarudy/")
setwd("~/datasciencecoursera/ReproducibleResearch")
