storm_fatalities <- filter(storm_fatalities, total > 0)
storm_fatalities
qplot(EVTYPE, total, data = storm_fatalities)
qplot(EVTYPE, total, data = storm, geom = "bar", stat = "identity")
qplot(EVTYPE, FATALITIES, data = storm_fatalities)
qplot(EVTYPE, FATALITIES, data = storm, geom = "bar", stat = "identity")
ggplot(aes(EVTYPE, FATALITIES), data = storm) + geom_bar(stat = "identity")
ggplot(aes(EVTYPE, total), data = storm_fatalities) + geom_bar(stat = "identity")
boxplot(storm_fatalities$total)
b <- boxplot(storm_fatalities$total)
b
fatality_outliers <- boxplot(storm_fatalities$total)
boxplot(fatality_outliers)
fatality_outliers <- boxplot(storm_fatalities$total)$out
boxplot(fatality_outliers)
boxplot(fatality_outliers)$out
fatality_outliers <- boxplot(storm_fatalities)$out
dangerous_storms <- filter(storm_fatalities, FATALITIES %in% fatality_outliers)
dangerous_storms <- filter(storm_fatalities, total %in% fatality_outliers)
dangerous_storms
ggplot(aes(EVTYPE, total), data = dangerous_storms) + geom_bar(stat = "identity")
storm_injuries <- storm %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES)) %>%
filter(total > 0)
injury_outliers <- boxplot(storm_injuries)$out
injury_storms <- filter(storm_injuries, INJURIES %in% injury_outliers)
injury_storms <- filter(storm_injuries, total %in% injury_outliers)
injury_storms
intersect(fatal_storms, injury_storms)
fatal_storms <- filter(storm_fatalities, total %in% fatality_outliers)
intersect(fatal_storms, injury_storms)
inner_join(fatal_storms, injury_storms, by = "EVTYPE")
dangerous_storms <- inner_join(fatal_storms, injury_storms, by = "EVTYPE")
order_by(dangerous_storms, total.x, total.y)
arrange(dangerous_storms, total.x, total.y)
order_by(dangerous_storms, desc(total.x), desc(total.y))
order_by(dangerous_storms, desc(total.x,total.y))
arrange(dangerous_storms, desc(total.x), desc(total.y))
top_5_fatalities <- dangerous_storms %>% filter(EVTYPE, total.x) %>% arrange(desc(total.x))
top_5_fatalities <- dangerous_storms %>% select(EVTYPE, total.x) %>% arrange(desc(total.x))
top_5_fatalities
top_5_fatalities <- dangerous_storms %>% select(EVTYPE, total.x) %>% arrange(desc(total.x)) %>% top_n()
top_5_fatalities <- dangerous_storms %>% select(EVTYPE, total.x) %>% arrange(desc(total.x)) %>% top_n(5)
top_5_fatalities
top_5_injuries <- dangerous_storms %>% select(EVTYPE, total.y) %>% arrange(desc(total.y)) %>% top_n(5)
top_5_injuries
top_5_injuries <- dangerous_storms %>% select(EVTYPE, total.y) %>% arrange(desc(total.y)) %>% top_n(5)
dangerous_storms <- mutate(danger_score <- 2/3 * total.y + 1/3 * total.x)
dangerous_storms
dangerous_storms <- mutate(danger_score = 2/3 * total.x + 1/3 * total.y)
dangerous_storms <- mutate(dangerous_storms, danger_score = 2/3 * total.x + 1/3 * total.y)
dangerous_storms
top_5_danger_scores <- dangerous_storms %>%
select(EVTYPE, danger_score) %>%
arrange(desc(danger_score)) %>%
top_n(5)
top_5_danger_scores
top_5_fatalities
top_5_injuries
qplot(storms, EVTYPE, fatalities)
qplot(storms, EVTYPE, FATALITIES)
names(storms)
names(storm)
qplot(storm, EVTYPE, FATALITIES)
qplot(storm, EVTYPE,FATALITIES)
qplot(EVTYPE,FATALITIES, data = storm)
qplot(FATALITIES, data = storm)
qplot(total.x, data = dangerous_storms)
boxplot(dangerous_storms$FATALITIES)
boxplot(dangerous_storms)
dim(dangerous_storms)
dim(dangerous_storms$total.x)
boxplot(dangerous_storms$total.x)
top_5_danger_scores
top_5_fatalities
boxplot(top_5_fatalities)
ggplot(aes(EVTYPE, total), data = fatal_storms) + geom_bar(stat = "identity")
fatal_storms
dangerous_storms
rename(dangerous_storms, total.x = fatalities)
rename(dangerous_storms, fatalities = total.x)
top_5_injuries
top_5_danger_scores
dangerous_storms <- dangerous_storms %>%
mutate(dangerous = ifelse(
test = EVTYPE %in% top_5_danger_scores$EVTYPE,
TRUE,
FALSE
)) %>%
arrange(desc(danger_score))
dangerous_storms
dangerous_storms <- dangerous_storms %>%
mutate(
dangerous_storms,
danger_score = 2/3 * total.x + 1/3 * total.y
) %>%
rename(
fatalities = total.x,
injuries = total.y
)
dangerous_storms <- inner_join(fatal_storms, injury_storms, by = "EVTYPE")
dangerous_storms <- dangerous_storms %>%
mutate(
dangerous_storms,
danger_score = 2/3 * total.x + 1/3 * total.y
) %>%
rename(
fatalities = total.x,
injuries = total.y
)
dangerous_storms <- dangerous_storms %>%
mutate(
danger_score = 2/3 * total.x + 1/3 * total.y
) %>%
rename(
fatalities = total.x,
injuries = total.y
)
dangerous_storms <- dangerous_storms %>%
mutate(dangerous = ifelse(
test = EVTYPE %in% top_5_danger_scores$EVTYPE,
TRUE,
FALSE
)) %>%
arrange(desc(danger_score))
ggplot(aes(EVTYPE, total), data = fatal_storms) + geom_bar(stat = "identity", color = dangerous)
ggplot(aes(EVTYPE, total), data = fatal_storms) + geom_bar(stat = "identity", aes(color = dangerous))
dangerous_storms
ggplot(aes(EVTYPE, fatalities), data = dangerous_storms) + geom_bar(stat = "identity", aes(color = dangerous))
ggplot(aes(EVTYPE, fatalities), data = arrange(dangerous_storms, desc(fatalities)) + geom_bar(stat = "identity", aes(color = dangerous))
)
ggplot(aes(EVTYPE, fatalities), data = arrange(dangerous_storms, desc(fatalities))) + geom_bar(stat = "identity", aes(color = dangerous))
ggplot(aes(EVTYPE, fatalities), data = arrange(dangerous_storms, desc(fatalities))) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, fatalties), fatalities), data = arrange(dangerous_storms, desc(fatalities))) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, fatalities), fatalities), data = arrange(dangerous_storms, desc(fatalities))) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, fatalities), fatalities), data = dangerous_storms) + geom_bar(stat = "identity", aes(fill = dangerous))
top_10_fatalities <- dangerous_storms %>%
arrange(desc(fatalities)) %>%
top_n(10)
top_10_injuries <- dangerous_storms %>%
arrange(desc(injuries)) %>%
top_n(10)
top_10_injuries <- dangerous_storms %>%
arrange(desc(injuries)) %>%
top_n(
top_10_injuries <- dangerous_storms %>%
arrange(desc(injuries)) %>%
top_n(
)
top_10_injuries <- dangerous_storms %>%
arrange(desc(injuries)) %>%
top_n(10)
top_10_fatalities <- dangerous_storms %>%
arrange(desc(fatalities)) %>%
top_n(10, wt = fatalities)
top_10_injuries <- dangerous_storms %>%
arrange(desc(injuries)) %>%
top_n(10, wt = injuries)
ggplot(aes(reorder(EVTYPE, fatalities), fatalities), data = top_10_fatalities) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, injuries), injuries, xlab = "Event"), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event")
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ylab("Injuries")
dangerous_storms
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ylab("Injuries") + theme(axis.text.x = element_text(angle=90))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ylab("Injuries") + theme(axis.text.x = element_text(angle=45))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ylab("Injuries") + theme(axis.text.x = element_text(angle=90))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ggplot(aes(reorder(EVTYPE, fatalities), fatalities), data = top_10_fatalities) + theme(axis.text.x = element_text(angle=90))
ggplot(aes(reorder(EVTYPE, injuries), injuries), data = top_10_injuries) + geom_bar(stat = "identity", aes(fill = dangerous)) + xlab("Event") + ylab("Injuries") + theme(axis.text.x = element_text(angle=90)) + ggplot(aes(reorder(EVTYPE, fatalities), fatalities), data = top_10_fatalities)
geom_bar(aes(reorder(EVTYPE, injuries), injuries, fill = dangerous), data = top_10_injuries, stat = "identity") + xlab("Event")  theme(axis.text.x = element_text(angle=90))
geom_bar(aes(reorder(EVTYPE, injuries), injuries, fill = dangerous), data = top_10_injuries, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90))
ggplot() + geom_bar(aes(reorder(EVTYPE, injuries), injuries, fill = dangerous), data = top_10_injuries, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90))
ggplot() + geom_bar(aes(reorder(EVTYPE, injuries), injuries, fill = dangerous), data = top_10_injuries, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + geom_bar(aes(reorder(EVTYPE, fatalities), fatalities, fill = dangerous), data = top_10_injuries, stat = "fatalities")
ggplot() + geom_bar(aes(reorder(EVTYPE, injuries), injuries, fill = dangerous), data = top_10_injuries, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + geom_bar(aes(reorder(EVTYPE, fatalities), fatalities, fill = dangerous), data = top_10_injuries, stat = "identity")
dangerous_storms
library(tidyr)
pivot_longer(dangerous_storms, -(danger_score, dangerous), names_to = "danger_variable", values_to = "total")
pivot_longer(dangerous_storms, -c(danger_score, dangerous), names_to = "danger_variable", values_to = "total")
pivot_longer(dangerous_storms, -c(EVTYPE, danger_score, dangerous), names_to = "danger_variable", values_to = "total")
ggplot() + geom_bar(aes(reorder(EVTYPE, total), total, fill = dangerous), data = dangerous_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet(danger_variable ~ .)
ggplot() + geom_bar(aes(reorder(EVTYPE, total), total, fill = dangerous), data = dangerous_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_frid(danger_variable ~ .)
ggplot() + geom_bar(aes(reorder(EVTYPE, total), total, fill = dangerous), data = dangerous_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ .)
ggplot(data = dangerous_storms, aes(EVTYPE, total)) + geom_bar(stat = "identity")
d <- pivot_longer(dangerous_storms, -c(danger_score, dangerous), names_to = "danger_variable", values_to = "total")
d <- pivot_longer(dangerous_storms, -c(EVTYPE, danger_score, dangerous), names_to = "danger_variable", values_to = "total")
d
ggplot() + geom_bar(aes(reorder(EVTYPE, total), total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ .)
filter(d, dangerous = TRUE)
filter(d, dangerous == TRUE)
top_5_danger_scores
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ .)
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = top_n(d, 10, wt = danger_score), stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ .)
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ .)
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = free)
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = "free")
source('project2.R')
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = "free")
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = "free")
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = "free")
ggplot() + geom_bar(aes(EVTYPE, total, fill = dangerous), data = d, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(danger_variable ~ ., scales = "free")
source('project2.R')
source('project2.R')
source('project2.R')
source('project2.R')
source('project2.R')
source('project2.R')
source('project2.R')
dev.off()
dev.off()
source('project2.R')
source('project2.R')
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health_storms), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
storm_fatalities <- storm %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES)) %>%
filter(total > 0)
fatality_outliers <- boxplot(storm_fatalities)$out
top_fatal_storms <- filter(storm_fatalities, total %in% fatality_outliers)
storm_injuries <- storm %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES)) %>%
filter(total > 0)
injury_outliers <- boxplot(storm_injuries)$out
top_injury_storms <- filter(storm_injuries, total %in% injury_outliers)
pop_health_storms <- inner_join(top_fatal_storms, top_injury_storms, by = "EVTYPE")
pop_health_storms <- pop_health_storms %>%
mutate(
neg_pop_health_score = 2/3 * total.x + 1/3 * total.y
) %>%
rename(
fatalities = total.x,
injuries = total.y
)
top_5_neg_pop_health_scores <- pop_health_storms %>%
select(EVTYPE, neg_pop_health_score) %>%
arrange(desc(neg_pop_health_score)) %>%
top_n(5)
pop_health_storms <- pop_health_storms %>%
mutate(worst_pop_health = ifelse(
test = EVTYPE %in% pop_health_storms$EVTYPE,
TRUE,
FALSE
)) %>%
arrange(desc(neg_pop_health_score))
top_10_fatalities <- pop_health_storms %>%
arrange(desc(fatalities)) %>%
top_n(10, wt = fatalities)
top_10_injuries <- pop_health_storms %>%
arrange(desc(injuries)) %>%
top_n(10, wt = injuries)
melted_pop_health_storms <- pivot_longer(pop_health_storms, -c(EVTYPE, neg_pop_health_score, worst_pop_health), names_to = "pop_health_variable", values_to = "total")
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health_storms), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health_storm), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
source('project2.R')
source('project2.R')
dev.off()
source('project2.R')
pop_health_storms <- pop_health_storms %>%
mutate(worst_pop_health = ifelse(
test = EVTYPE %in% top_5_neg_pop_health_scores$EVTYPE,
TRUE,
FALSE
)) %>%
arrange(desc(neg_pop_health_score))
melted_pop_health_storms <- pivot_longer(pop_health_storms, -c(EVTYPE, neg_pop_health_score, worst_pop_health), names_to = "pop_health_variable", values_to = "total")
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
melted_pop_health_storms <- pivot_longer(pop_health_storms, -c(EVTYPE, neg_pop_health_score, worst_pop_health), names_to = "pop_health_variable", values_to = "total")
source('project2.R')
source('project2.R')
fatality_outliers <- boxplot.stats(storm_fatalities)$out
storm_fatalities <- storm %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES)) %>%
filter(total > 0)
fatality_outliers <- boxplot.stats(storm_fatalities)$out
storm_fatalities
fatality_outliers <- boxplot.stats(storm_fatalities$total)$out
storm_fatalities
source('project2.R')
dev.off()
source('project2.R')
ggplot() + geom_bar(aes(EVTYPE, total, fill = worst_pop_health), data = melted_pop_health_storms, stat = "identity") + xlab("Event") + theme(axis.text.x = element_text(angle=90)) + facet_grid(pop_health_variable ~ ., scales = "free")
fatality_outliers
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
storms <- read.csv(fileName)
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
arrange(storm_fatalities, desc(total)
)
head(arrange(storm_fatalities, desc(total)), 30)
arrange(storm_fatalities, desc(total))[30, ]
min(fatality_outliers)
boxplot(storm_fatalities)
boxplot(storm_fatalities)
median(storm_fatalities$total)
mean(storm_fatalities$total)
median(storm_injuries$total)
boxplot(storm_injuries$total)
storm_injuries$total[storm_injuries$total < median(storm_injuries$total)]
injury_outliers$total[injury_outliers$total < median(storm_injuries$total)]
injury_outliers
injury_outliers[injury_outliers < median(storm_injuries$total)]
median(stomr_injuries$total)
median(storm_injuries$total)
head(storms)
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
storm_injuries <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES))
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
storm_injuries <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES))
fileName <- 'repdata_data_StormData.csv.bz2'
if (!file.exists(fileName)){
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2')
}
if (!exists("storms")){
storms <- read.csv(fileName)
}
head(storms)
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
storm_injuries <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES))
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
storm_injuries <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(INJURIES))
storms <- read.csv(fileName)
storm_fatalities <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(FATALITIES))
head(storms)
ggplot() +
geom_bar(
aes(EVTYPE, total, fill = worst_pop_health),
data = melted_pop_health_storms,
stat = "identity"
) +
xlab("Event") +
theme(axis.text.x = element_text(angle=90)) +
facet_grid(
pop_health_variable ~ .,
scales = "free"
)
pop_health_storms
View(top_fatal_storms)
dim(pop_health_storms)
View(top_5_neg_pop_health_scores)
View(storm_fatalities)
View(top_fatal_storms)filter(pop_health_storms, grep("FLOOD", EVTYPE))
filter(pop_health_storms, grep("FLOOD", EVTYPE))
filter(pop_health_storms, grepl("FLOOD", EVTYPE))
pop_health_storms
boxplot.stats(pop_health_storms$neg_pop_health_score)$out
head(storms)
storm_cropmdg <- storms %>% group_by(EVTYPE) %>% summarize(total = sum(CROPDMG)) %
first("FATALITIES")
storm_cropdmg <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(CROPDMG)) %>%
filter(total > 0)
storm_propdmg <- storms %>%
group_by(EVTYPE) %>%
summarize(total = sum(PROPDMG)) %>%
filter(total > 0)
cropdmg_outliers <- boxplot.stats(storm_cropdmg$total)$out
cropdmg_outliers
propdmg_outliers <- boxplot.stats(storm_propdmg$total)$out
top_propdmg_storms <- filter(
storm_propdmg,
total %in% propdmg_outliers
)
propdmg_outliers
cropdmg_outliers[cropdmg_outliers < median(storm_cropdmg$total)]
propdmg_outliers[propdmg_outliers < median(storm_propdmg$total)]
economy_storms <- inner_join(
top_cropdmg_storms,
top_propdmg_storms,
by = "EVTYPE"
)
cropdmg_outliers <- boxplot.stats(storm_cropdmg$total)$out
top_cropdmg_storms <- filter(
storm_cropdmg,
total %in% cropdmg_outliers
)
propdmg_outliers <- boxplot.stats(storm_propdmg$total)$out
top_propdmg_storms <- filter(
storm_propdmg,
total %in% propdmg_outliers
)
economy_storms <- inner_join(
top_cropdmg_storms,
top_propdmg_storms,
by = "EVTYPE"
)
economy_storms <-rename(
pop_health_storms,
cropdmg = total.x,
propdmg = total.y
)
head(economy_storms)
dim(economy_storms)
economy_storms <- inner_join(
top_cropdmg_storms,
top_propdmg_storms,
by = "EVTYPE"
)
economy_storms <-rename(
pop_health_storms,
cropdmg = total.x,
propdmg = total.y
)
head(economy_storms)
dim(economy_storms)
economy_storms <- inner_join(
top_cropdmg_storms,
top_propdmg_storms,
by = "EVTYPE"
)
economy_storms
economy_storms <-rename(
economy_storms,
cropdmg = total.x,
propdmg = total.y
)
economy_storms <- inner_join(
top_cropdmg_storms,
top_propdmg_storms,
by = "EVTYPE"
)
economy_storms <-rename(
economy_storms,
cropdmg = total.x,
propdmg = total.y
)
head(economy_storms)
dim(economy_storms)
economy_storms <- mutate(
economy_storms,
neg_economy_score = 1/2 * cropdmg + 1/2 * propdmg
)
head(economy_storms)
dim(economy_storms)
top_5_neg_economy_scores <- economy_storms %>%
select(EVTYPE, neg_economy_score) %>%
arrange(desc(neg_economy_score)) %>%
top_n(5)
head(top_5_neg_economy_scores)
economy_storms <- economy_storms %>%
mutate(top_5_neg_economy = ifelse(
test = EVTYPE %in% top_5_neg_economy_scores$EVTYPE,
TRUE,
FALSE
)) %>%
arrange(desc(neg_economy_score))
head(economy_storms)
dim(economy_storms)
melted_economy_storms <- pivot_longer(
economy_storms,
-c(EVTYPE, neg_economy_score, top_5_neg_economy_scores),
names_to = "economy_variable",
values_to = "total"
)
head(melted_economy_storms)
dim(melted_economy_storms)
melted_economy_storms <- pivot_longer(
economy_storms,
-c(EVTYPE, neg_economy_score, top_5_neg_economy_scores),
names_to = "economy_variable",
values_to = "total"
)
melted_economy_storms <- pivot_longer(
economy_storms,
-c(EVTYPE, neg_economy_score, top_5_neg_economy),
names_to = "economy_variable",
values_to = "total"
)
head(melted_economy_storms)
dim(melted_economy_storms)
ggplot() +
geom_bar(
aes(EVTYPE, total, fill = top_5_neg_economy),
data = melted_economy_storms,
stat = "identity"
) +
xlab("Event") +
theme(axis.text.x = element_text(angle=90)) +
facet_grid(
economy_variable ~ .,
scales = "free"
)
